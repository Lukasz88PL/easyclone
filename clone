#!/usr/bin/env bash
#=============================================================
# https://github.com/xd003/clone
# File Name: clone
# Author: xd003
# Description: Clone bash script to be used for common fclone/gclone operations
# System Supported: Arch , Ubuntu/Debian , Fedora & Termux ( amd64 & arm64 )
#=============================================================

cecho() {
  local code="\033["
  case "$1" in
  black | bk) color="${code}0;30m" ;;
  red | r) color="${code}1;31m" ;;
  green | g) color="${code}1;32m" ;;
  yellow | y) color="${code}1;33m" ;;
  blue | b) color="${code}1;34m" ;;
  purple | p) color="${code}1;35m" ;;
  cyan | c) color="${code}1;36m" ;;
  gray | gr) color="${code}0;37m" ;;
  *) local text="$1" ;;
  esac
  [ -z "$text" ] && local text="$color$2${code}0m"
  echo -e "$text"
}

# Variable
conf="$HOME/easyclone/rc.conf"
jc="$(ls -l $HOME/easyclone/accounts | egrep -c '^-')"
rjc1="$(shuf -i 1-$jc -n 1)"
rjc2="$(shuf -i 1-$jc -n 1)"

# Functions
fsrc() {
  : > $HOME/easyclone/log.txt
  sed -i '/^team_drive/d' $conf
  sed -i '/^root_folder_id/d' $conf
  read -e -p "Enter the source folder id or url : " src
  src=$(echo $src | sed -E 's~.*[/=]([01A-Z][-_[:alnum:]]+)([?/].*|$)~\1~')
  case $src in
  0*)
    sed -i "6iteam_drive = $src" $conf
    ;;
  1*)
    sed -i "6iroot_folder_id = $src" $conf
    ;;
  esac
#sed -i "7s/*\.json/$rjc1\.json/" $conf
}

fdst() {
  read -e -p "Enter the destination folder id or url : " dst
  dst=$(echo $dst | sed -E 's~.*[/=]([01A-Z][-_[:alnum:]]+)([?/].*|$)~\1~')
  case $dst in
  0*)
    sed -i "13iteam_drive = $dst" $conf
    ;;
  1*)
    sed -i "13iroot_folder_id = $dst" $conf
    ;;
  esac
#sed -i "15s/*\.json/$rjc2\.json/" $conf
}

while true; do
  cat << EOF
┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋1) Copy
┋    (Copy files from source to dest, skipping already copied)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋2) Move
┋    (Move files from source to dest, skipping already moved)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋3) Sync
┋    (Make source and dest identical, modifying destination only)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋4) Dedupe
┋    (Find duplicate files and delete/rename them)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋5) Size
┋    (Return the total size and number of objects)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋6) Listing
┋    (List all the files and folders)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋7) NCDU
┋    (Explore directory with text based UI)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋8) Empty Trash
┋    (You need to have Manager Permission in TD)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋9) Delete Empty Folders
┋    (Delete all Empty Folders recursively)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋10) Check
┋    (Check if the files in the source and destination match)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋11) Delete
┋    (Delete a file or a folder along with its content)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋12) Quit
┋    (Exit the Script)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
EOF

  echo
  read -e -p "Enter your input : " opt
  echo
  case $opt in
  1)
    cecho b "Copy option has been selected"
    fsrc 
    fdst
    (cd $HOME/easyclone/sasync; bash sasync set.copy)
    ;;
  2)
    cecho b "Move option has been selected"
    fsrc
    fdst
    rclone --config=$HOME/easyclone/rc.conf move src: dst: --fast-list --drive-server-side-across-configs --ignore-existing --drive-acknowledge-abuse --drive-keep-revision-forever --stats=1s --stats-one-line -vP --drive-chunk-size 128M --transfers=16 --checkers=32 --log-file $HOME/easyclone/log.txt
    ;;
  3)
    cecho b "Sync option has been selected"
    fsrc
    fdst
    (cd $HOME/easyclone/sasync; bash sasync set.sync)
    ;;
  4)
    cecho b "Dedupe option has been selected"
    cat << EOF
┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋1) Interactive
┋    (Use Dedupe Interactively)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋2) Skip
┋    (Removes identical files then skips anything left)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋3) First
┋    (Removes identical files then keeps the first one)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋4) Newest
┋    (Removes identical files then keeps the newest one)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋5) Oldest
┋    (removes identical files then keeps the oldest one)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋6) Largest
┋    (removes identical files then keeps the largest one)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋7) Smallest
┋    (removes identical files then keeps the smallest one)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋8) Rename
┋    (removes identical files then renames the rest to be different)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋9) Return to Main Menu
┋    (Restart the script from Main Menu)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
EOF
    echo
    read -e -p "Enter the Dedupe Operation Mode (1-9) : " dm
    if [[ $dm -ne 9 ]]; then
      fsrc
    fi
    case $dm in
    1)
      cecho b "Dedupe Interactive option has been selected"
      rclone --config=$HOME/easyclone/rc.conf dedupe --dedupe-mode interactive src: --fast-list --verbose=2
      ;;
    2)
      cecho b "Dedupe Skip option has been selected"
      rclone --config=$HOME/easyclone/rc.conf dedupe --dedupe-mode skip src: --fast-list --verbose=2
      ;;
    3)
      cecho b "Dedupe First option has been selected"
      rclone --config=$HOME/easyclone/rc.conf dedupe --dedupe-mode first src: --fast-list --verbose=2
      ;;
    4)
      cecho b "Dedupe Newest option has been selected"
      rclone --config=$HOME/easyclone/rc.conf dedupe --dedupe-mode newest src: --fast-list --verbose=2
      ;;
    5)
      cecho b "Dedupe Oldest option has been selected"
      rclone --config=$HOME/easyclone/rc.conf dedupe --dedupe-mode oldest src: --fast-list --verbose=2
      ;;
    6)
      cecho b "Dedupe Largest option has been selected"
      rclone --config=$HOME/easyclone/rc.conf dedupe --dedupe-mode largest src: --fast-list --verbose=2
      ;;
    7)
      cecho b "Dedupe Smallest option has been selected"
      rclone --config=$HOME/easyclone/rc.conf dedupe --dedupe-mode smallest src: --fast-list --verbose=2
      ;;
    8)
      cecho b "Dedupe Rename option has been selected"
      rclone --config=$HOME/easyclone/rc.conf dedupe --dedupe-mode rename src: --fast-list --verbose=2
      ;;
    9)
      continue
      ;;
    esac

    ;;
  5)
    cecho b "Size option has been selected"
    fsrc
    rclone --config=$HOME/easyclone/rc.conf size src: --fast-list
    ;;
  6)
    cecho b "Listing option has been selected"
    cat << EOF
┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋1) ls
┋    (List the objects in the path with size and path)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋2) lsd
┋    (List all directories/containers/buckets in the path)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋3) lsf
┋    (List directories and objects in remote:path formatted for parsing)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋4) lsjson
┋    (List directories and objects in the path in JSON format)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋5) lsl
┋    (List the objects in path with modification time, size and path)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋6) tree
┋    (List the contents of the remote in a tree like fashion)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋7) Return to Main Menu
┋    (Restart the script from Main Menu)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
EOF
    echo
    read -e -p "Choose the listing type : " lt
    if [[ $lt -ne 7 ]]; then
      fsrc
    fi
    case $lt in
    1)
      cecho b "Listing / ls option has been selected"
      rclone --config=$HOME/easyclone/rc.conf ls src:
      ;;
    2)
      cecho b "Listing / lsd option has been selected"
      rclone --config=$HOME/easyclone/rc.conf lsd src:
      ;;
    3)
      cecho b "Listing / lsf option has been selected"
      rclone --config=$HOME/easyclone/rc.conf lsf src:
      ;;
    4)
      cecho b "Listing / lsjson option has been selected"
      rclone --config=$HOME/easyclone/rc.conf lsjson src:
      ;;
    5)
      cecho b "Listing / lsl option has been selected"
      rclone --config=$HOME/easyclone/rc.conf lsl src:
      ;;
    6)
      cecho b "Listing / tree option has been selected"
      rclone --config=$HOME/easyclone/rc.conf tree src:
      ;;
    7)
      continue
      ;;
    esac
    ;;
  7)
    cecho b "NCDU option has been selected"
    fsrc
    rclone --config=$HOME/easyclone/rc.conf ncdu src: --fast-list
    ;;
  8)
    cecho b "Empty Trash option has been selected"
    fsrc
    rclone --config=$HOME/easyclone/rc.conf delete src: --drive-trashed-only=true --drive-use-trash=false --fast-list --verbose=2 --log-file $HOME/easyclone/log.txt
    ;;
  9)
    cecho b "Delete Empty folders option has been selected"
    fsrc
    rclone --config=$HOME/easyclone/rc.conf rmdirs src: --leave-root --fast-list --log-file $HOME/easyclone/log.txt
    ;;
  10)
    cecho b "Check option has been selected"
    cat << EOF
┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋1) Compare only Size
┋    (MD5/SHA1 is not considered here. Use this for a quick check)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋2) Compare Size + MD5 / SHA1 Hash
┋    (Compares sizes and hashes and logs report of unmatched files .Very slow process)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋3) Compare after Downloading data locally
┋    (Download data from both the directories and Compare them on the fly .Use only if remote doesn't support hashes)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋4) Return to Main Menu
┋    (Restart the script from Main Menu)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
EOF
    echo
    read -e -p "Choose the Comparison Mode : " opt
    if [[ $opt -ne 4 ]]; then
      fsrc
      fdst
    fi
    case $opt in
    1)
      cecho b "Check / Compare only size option has been selected"
      rclone --config=$HOME/easyclone/rc.conf check src: dst: -P --drive-server-side-across-configs --fast-list --size-only
      ;;
    2)
      cecho b "Check / Compare size + MD5 option has been selected"
      rclone --config=$HOME/easyclone/rc.conf check src: dst: -P --drive-server-side-across-configs --fast-list
      ;;
    3)
      cecho b "Check / Compare locally downloaded date option has been selected"
      rclone --config=$HOME/easyclone/rc.conf check src: dst: -P --drive-server-side-across-configs --fast-list --download
      ;;
    4)
      continue
      ;;
    esac
    ;;
  11)
    cecho b "Delete option has been selected"
    cat << EOF
┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋1) Delete
┋    (Delete the contents of path)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋2) Deletefile
┋    (Delete a single file from path)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋3) Purge
┋    (Delete the path and its content)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
┋4) Return to Main Menu
┋    (Restart the script from Main Menu)
┋┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉┉
EOF
    echo
    read -e -p "Enter your input : " opt
    if [[ $opt -ne 4 ]]; then
      fsrc
    fi
    case $opt in
    1)
      cecho b "Delete / Default option has been selected"
      rclone --config=$HOME/easyclone/rc.conf delete src: -vP --stats-one-line --stats=15s --fast-list --log-file $HOME/easyclone/log.txt
      ;;
    2)
      cecho b "Delete / Deletet option has been selected"
      rclone --config=$HOME/easyclone/rc.conf deletefile src: -vP --stats-one-line --stats=15s --fast-list --log-file $HOME/easyclone/log.txt
      ;;
    3)
      cecho b "Delete / Purge option has been selected"
      rclone --config=$HOME/easyclone/rc.conf purge src: -vP --stats-one-line --stats=15s --fast-list --log-file $HOME/easyclone/log.txt
      ;;
    4)
      continue
      ;;
    esac
    ;;
  12)
    exit
    ;;
  esac
  if [[ "$?" ]]; then
      break
  fi
done
