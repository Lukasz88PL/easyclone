#!/usr/bin/env bash
#=============================================================
# https://github.com/xd003/clone
# File Name: setup.sh
# Author: xd003
# Description: Installing prerequisites for clone script
# System Supported: Unrooted Termux ( arm64 / aarch64 )
#=============================================================

cecho() {
        local code="\033["
        case "$1" in
                black  | bk) color="${code}0;30m";;
                red    |  r) color="${code}1;31m";;
                green  |  g) color="${code}1;32m";;
                yellow |  y) color="${code}1;33m";;
                blue   |  b) color="${code}1;34m";;
                purple |  p) color="${code}1;35m";;
                cyan   |  c) color="${code}1;36m";;
                gray   | gr) color="${code}0;37m";;
                *) local text="$1"
        esac
        [ -z "$text" ] && local text="$color$2${code}0m"
        echo -e "$text"
}

#Variables 
fclone_version=v0.4.1
gclone_version=v1.53.3
ehome="$(echo $HOME)"
conf="$HOME/easyclone/rc.conf"
arch="$(uname -m)"

# Installing Dependencies
cecho r "Installing all the required dependencies"
apt update && \
apt install -y unzip git wget 

# Detecting the linux kernel architecture
echo
cecho r "Defining the kernel architecture"
arch=tarm64

# Detecting Source path for binaries and script to be added
spath="$(which git)"
spath=$(echo $spath | sed 's/\/git$//')

# Downloading latest easyclone script from github
echo
cecho r "Downloading latest easyclone script from github"
rm -rf $(which clone)
mkdir $HOME/tmp
git clone https://github.com/xd003/easyclone $HOME/tmp
mv $HOME/tmp/clone $spath
chmod u+x $spath/clone

# Downloading Latest fclone/gclone binary and adding to path
echo
cat << EOF
1. fclone
2. gclone
EOF
read -e -p "What would you like to install , Enter input as 1 or 2 : " opt
echo
cecho r "Downloading Latest fclone/gclone binary and adding to path"
case $opt in
1)
  rm -rf $(which fclone)
  URL=http://easyclone.xd003.workers.dev/0:/fclone/fclone-$fclone_version-linux-$arch.zip
  wget -c -t 0 --timeout=60 --waitretry=60 $URL -O $HOME/tmp/fclone.zip
  unzip -q $HOME/tmp/fclone.zip -d $HOME/tmp
  mv $HOME/tmp/fclone $spath
  chmod u+x $spath/fclone
  cecho b "Easyclone script & fclone successfully updated"
;;
2)
  rm -rf $(which gclone)
  URL=http://easyclone.xd003.workers.dev/0:/gclone/gclone-$gclone_version-linux-$arch.zip
  wget -c -t 0 --timeout=60 --waitretry=60 $URL -O $HOME/tmp/gclone.zip
  unzip -q $HOME/tmp/gclone.zip -d $HOME/tmp
  mv $HOME/tmp/gclone $spath
  chmod u+x $spath/gclone
  sed -i 's/fclone/gclone/g' $(which clone)
  sed -i 's/ --check-first//g' $(which clone)
  cecho b "Easyclone script & gclone successfully updated"
;;
esac
rm -rf $HOME/tmp

# Pulling the accounts folder containing service accounts from github 
echo
cecho r "Pulling the accounts folder containing service accounts from github"
if [ -d "$HOME/easyclone/accounts" ] && [ -f "$HOME/easyclone/accounts/1.json" ]; then
    cecho b "Accounts folder already existing //Skipping"
else
    mkdir -p $HOME/easyclone/accounts
    echo && cecho r "Downloading the service accounts from your private repo"
    read -e -p "Input your github username : " username
    read -e -p "Input your github password : " password
    git clone https://"$username":"$password"@github.com/"$username"/accounts $HOME/easyclone/accounts
    cecho b "Service accounts were added Successfully"
fi

# Creating the rclone.conf with appropriate info
echo
cecho r "Generating rclone config to be used"
if grep -q "$HOME/easyclone/accounts/1.json" $conf; then
    cecho b "gd remote to be generated by easyclone pre exists in rc.conf //Skipping"
else
    read -e -p "Input your client_id : " client
    read -e -p "Input your client_secret : " secret
    touch $conf
    echo "[gd]" >> $conf
    echo "type = drive" >> $conf
    echo "Press enter and leave the below two options blank if you don't prefer to use your own client id and secret"
    eval echo "client_id = $client" >> $conf
    eval echo "client_secret = $secret" >> $conf
    echo "scope = drive" >> $conf
    eval echo "service_account_file = $HOME/easyclone/accounts/1.json" >> $conf
    eval echo "service_account_file_path = $HOME/easyclone/accounts/" >> $conf
    cecho b "Successfully Generated the config with appropriate info"
fi

echo
cecho g "Entering clone will always start the script henceforth"
